- provide(:title, "#{@book.title}")
- breadcrumb :book_page, @book

.container.book_show-page
	h3
		= @book.title
	.book_description-area.z-depth-1
		p.image-size
			= image_tag(@book.image.to_s, :size => "300x360" || "default.jpg", :size => "300x360")
		.book_description
			table.book_table
				tr
					th
						| 評価
					td#star-avg
				tr
					th
						| 説明
					td = simple_format(@book.content)
				tr
					th
						| カテゴリ
					td = @book.category.name
				tr
					th
						| 本のボリューム
					td = @book.volume
				tr
					th
						| レベル
					td = @book.level
			- if current_user.id == @book.user_id
				.btn-wrap
					= link_to '編集', edit_book_path(@book), class: "edit-btn"
					= link_to '削除', book_path(@book), method: :delete, data: { confirm: "本当？" },class: "delete-btn"

			//お気に入り
			p id="book-favorite-#{@book.id}"
				= render 'favorites/favorites', book: @book

			p = raw(@book.tag_list.map { |t| link_to t, tag_path(t) }.join(', '))

	//関連書籍
	.category-books.z-depth-1
		p
			| 関連書籍
		- @books.each do |book|
			p.inner-image
				= image_tag(book.image.to_s, :size => "200x200" || "default.jpg", :size => "200x200")
			= book.title


	/ レビュー一覧
	.book_reviews
		- @reviews.each do |review|
			.book_review
				.review-content.z-depth-1
					p = review.title
					p = review.body
					p id="star-rate-#{review.id}"

					/　いいねボタンフォーム
					p id="clap-#{review.id}"
						= render 'claps/claps', { review: review, book: review.book }

					- if current_user == review.user
						p = link_to '編集する', edit_book_review_path(book, review), class: "btn"
						p = link_to '削除する', book_review_path(book, review), method: :delete, class: "btn"
				.review-user
					= image_tag(review.user.image.to_s, :size => '50x50' || 'default.jpg', :size => '50x50')
					= link_to review.user.name, user_path(review.user)
				/ スターの表示
				javascript:
					$('#star-rate-#{review.id}').raty({
						size: 36,
						starOff: "#{asset_path('star-off.png')}",
						starOn: "#{asset_path('star-on.png')}",
						starHalf: "#{asset_path('star-half.png')}",
						scoreName: 'review[rate]',
						half: true,
						readOnly: true,
						score: "#{review.rate}"
					});
		= paginate @reviews


	= link_to '#modal1', class: "modal-trigger waves-effect review_float-btn" do
		i.material-icons border_color

	#modal1.modal.bottom-sheet
		.modal-content
			= form_with model: @review, url: book_reviews_path(@book), local: true do |f|
				= render 'shared/review_fields', { f: f, review: @review, book: @book}
				= f.submit '評価する', class: "btn"

/ 評価平均の表示
javascript:
	$('#star-avg').raty({
		size: 36,
		starOff: "#{asset_path('star-off.png')}",
		starOn: "#{asset_path('star-on.png')}",
		starHalf: "#{asset_path('star-half.png')}",
		scoreName: 'review[rate]',
		half: true,
		readOnly: true,
		score: "#{@book.reviews.average(:rate).to_f.round(1)}",
	})